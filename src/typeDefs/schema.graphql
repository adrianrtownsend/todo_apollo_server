type Tag {
	id: ID
	name: String
	isVisible: Boolean
}

type Todo {
	id: ID
	title: String
	description: String
	isCompleted: Boolean
	user: User
	tags: [Tag]
}

type User {
	id: ID
	firstName: String
	lastName: String
	username: String
	email: String
	password: String
	isPrivate: Boolean
	todos: [Todo]
	followers: [User]
}

type Query {
	user(id: Int!): User
	todo(id: Int!): Todo
	tag(id: Int!): Tag
	users: [User]
	todos: [Todo]
	tags: [Tag]
	todosByUserId(userId: Int!): [Todo]
	userTodos(id: Int!, isCompleted: Boolean, tagIDs: [ID!]): [Todo]
}

type Mutation {
	createUser(
		username: String!
		email: String!
		firstName: String!
		lastName: String!
		password: String!
	): User!
	createTodo(title: String!, userId: Int!): Todo
	createTag(name: String!, isVisible: Boolean): Tag
	updateUser(
		id: Int!
		username: String
		email: String
		firstName: String
		lastName: String
		password: String
	): User!
	updateTodo(
		id: Int!
		title: String
		description: Boolean
		isCompleted: Boolean
	): Todo!
	deleteUser(id: Int!): User!
	deleteTodo(id: Int!): Todo!
	deleteTag(id: Int!): Tag!
}

type Subscription {
	todoCreated: Todo
	todoUpdated: Todo
	todoDeleted: Todo
	tagUpdated: Tag
}
